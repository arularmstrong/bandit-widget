{"version":3,"file":"static/js/555.51d3bff0.chunk.js","mappings":"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","sources":["components/WalletModal/Option.jsx","components/WalletModal/PendingView.jsx","components/Svgs/phantomWalletIcon.svg","components/WalletModal/PhantomWalletOption.jsx","components/WalletModal/SolanaWalletOptions.js","components/WalletModal/SolanaWalletModal.js","utils/userAgent.js"],"sourcesContent":["import { Image } from '@chakra-ui/react'\nimport styled from '@emotion/styled'\n\nconst InfoCard = styled.button`\n  background-color: ${({ theme }) => theme.backgroundInteractive};\n  padding: 1rem;\n  outline: none;\n  border: 1px solid;\n  border-radius: 12px;\n  width: 100% !important;\n  &:focus {\n    background-color: ${({ theme }) => theme.hoverState};\n  }\n  border-color: ${({ theme, isActive }) => (isActive ? theme.accentActive : 'transparent')};\n`\n\nconst OptionCard = styled(InfoCard)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 2rem;\n  padding: 1rem;\n`\n\nconst OptionCardClickable = styled(OptionCard)`\n  margin-top: 0;\n  border: ${({ active, theme }) => active && `1px solid ${theme.accentActive}`};\n  &:hover {\n    cursor: ${({ clickable }) => clickable && 'pointer'};\n    background-color: ${({ theme }) => theme.hoverState};\n  }\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n`\n\nconst OptionCardLeft = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: center;\n  height: 100%;\n`\n\nconst HeaderText = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: center;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.accentAction : ({ theme }) => theme.textPrimary)};\n  font-size: 16px;\n  font-weight: 600;\n`\n\nconst IconWrapper = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  justify-content: center;\n  padding-right: 12px;\n  & > img,\n  span {\n    height: ${({ size }) => (size ? size + 'px' : '28px')};\n    width: ${({ size }) => (size ? size + 'px' : '28px')};\n  }\n`\n\nexport default function Option({\n  link = null,\n  clickable = true,\n  size,\n  onClick = null,\n  color,\n  header,\n  subheader,\n  icon,\n  isActive = false,\n  id,\n}) {\n  // const content = (\n  //   <Card paddingX={20} paddingY={10} mb={10} onClick={onClick}>\n  //     <Flex justifyContent=\"space-between\" alignItems=\"center\">\n  //       <Box width={30} height={30}>\n  //         <Image src={icon} alt=\"Icon\" width={30} height={30} />\n  //         {/*<Icon height={30} width={30} />*/}\n  //       </Box>\n  //       <Text fontSize={14} fontWeight={600}>\n  //         {header}\n  //       </Text>\n  //     </Flex>\n  //   </Card>\n  // )\n\n  const content = (\n    <OptionCardClickable\n      id={id}\n      onClick={onClick}\n      clickable={clickable && !isActive}\n      active={isActive}\n      data-testid=\"wallet-modal-option\"\n    >\n      <OptionCardLeft>\n        <HeaderText color={color}>\n          <IconWrapper size={size}>\n            <Image src={icon} alt=\"Icon\" />\n          </IconWrapper>\n          {header}\n        </HeaderText>\n        {/*{subheader && <SubHeader>{subheader}</SubHeader>}*/}\n      </OptionCardLeft>\n      {/*{isActive && <CheckIcon />}*/}\n    </OptionCardClickable>\n  )\n  if (link) {\n    return (\n      <a target=\"_blank\" href={link} rel=\"noreferrer\">\n        {content}\n      </a>\n    )\n  }\n\n  return content\n}\n","import React from 'react'\nimport { Box, Flex, Text } from '@chakra-ui/react'\nimport { ArrowBackIcon } from '@chakra-ui/icons'\nimport Loader from '../../components/Loader'\n\nconst PendingView = ({ goBack }) => {\n  return (\n    <Box>\n      <ArrowBackIcon onClick={goBack} boxSize={'24px'} cursor=\"pointer\" />\n      <Flex direction=\"column\" alignItems=\"center\" mt={6}>\n        <Loader mb={5} />\n        <Text fontSize={16}>Waiting to connect</Text>\n        <Text fontSize={14}>Confirm this connection in your wallet</Text>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default PendingView\n","var _circle, _path, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPhantomWalletIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 128,\n    height: 128,\n    viewBox: \"0 0 128 128\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 64,\n    cy: 64,\n    r: 64,\n    fill: \"url(#paint0_linear)\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M110.584 64.9142H99.142C99.142 41.7651 80.173 23 56.7724 23C33.6612 23 14.8716 41.3057 14.4118 64.0583C13.936 87.577 36.241 108 60.0186 108H63.0094C83.9723 108 112.069 91.7667 116.459 71.9874C117.27 68.3413 114.358 64.9142 110.584 64.9142ZM39.7689 65.9454C39.7689 69.0411 37.2095 71.5729 34.0802 71.5729C30.9509 71.5729 28.3916 69.0399 28.3916 65.9454V56.8414C28.3916 53.7457 30.9509 51.2139 34.0802 51.2139C37.2095 51.2139 39.7689 53.7457 39.7689 56.8414V65.9454ZM59.5224 65.9454C59.5224 69.0411 56.9631 71.5729 53.8338 71.5729C50.7045 71.5729 48.1451 69.0399 48.1451 65.9454V56.8414C48.1451 53.7457 50.7056 51.2139 53.8338 51.2139C56.9631 51.2139 59.5224 53.7457 59.5224 56.8414V65.9454Z\",\n    fill: \"url(#paint1_linear)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear\",\n    x1: 64,\n    y1: 0,\n    x2: 64,\n    y2: 128,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#534BB1\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#551BF9\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear\",\n    x1: 65.4998,\n    y1: 23,\n    x2: 65.4998,\n    y2: 108,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"white\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"white\",\n    stopOpacity: 0.82\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPhantomWalletIcon);\nexport default __webpack_public_path__ + \"static/media/phantomWalletIcon.a233fd9848fcfe1f40371ba857dea706.svg\";\nexport { ForwardRef as ReactComponent };","import PHANTOM_ICON_URL from '../../components/Svgs/phantomWalletIcon.svg'\nimport { PhantomWalletName } from '@solana/wallet-adapter-wallets'\nimport Option from './Option'\n\nconst BASE_PROPS = {\n  color: '#315CF5',\n  icon: PHANTOM_ICON_URL,\n  id: 'phantom-wallet',\n}\n\nexport function InstallPhantomOption() {\n  return <Option {...BASE_PROPS} header={'Install Phantom'} link=\"https://phantom.app/\" />\n}\n\nexport function OpenPhantomWalletOption() {\n  return (\n    <Option\n      {...BASE_PROPS}\n      isActive={false}\n      link=\"https://phantom.app/ul/browse/${origin}\"\n      header=\"Open in Phantom Wallet app\"\n    />\n  )\n}\n\nexport function PhantomWalletOption({ tryActivation }) {\n  return <Option {...BASE_PROPS} isActive={false} onClick={() => tryActivation(PhantomWalletName)} header={'Phantom'} />\n}\n","import React from 'react'\nimport {\n  InstallPhantomOption,\n  OpenPhantomWalletOption,\n  PhantomWalletOption,\n} from '../../components/WalletModal/PhantomWalletOption'\nimport { getHasPhantomExtensionInstalled, getIsSolanaInjected } from '../../connection/utils'\nimport useUserAgent from '../../utils/userAgent'\nimport { Box, Text } from '@chakra-ui/react'\n\nconst SolanaWalletOptions = ({ tryActivation }) => {\n  const isMobile = useUserAgent()\n  const getOptions = () => {\n    const isSolanaInjected = getIsSolanaInjected()\n    const hasPhantomExtension = getHasPhantomExtensionInstalled()\n\n    let phantomOption\n    if (!isSolanaInjected) {\n      if (!isMobile) {\n        phantomOption = <InstallPhantomOption />\n      } else {\n        phantomOption = <OpenPhantomWalletOption />\n      }\n    } else if (hasPhantomExtension) {\n      phantomOption = <PhantomWalletOption tryActivation={tryActivation} />\n    }\n\n    return <>{phantomOption}</>\n  }\n  return (\n    <Box bg=\"background\">\n      <Text color=\"foreground\" fontSize={18} fontWeight={500}>\n        Connect Wallet\n      </Text>\n      {getOptions()}\n    </Box>\n  )\n}\n\nexport default SolanaWalletOptions\n","import PendingView from '../../components/WalletModal/PendingView'\nimport SolanaWalletOptions from '../../components/WalletModal/SolanaWalletOptions'\nimport { useWallet } from '@solana/wallet-adapter-react'\nimport React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { updateSolanaSelectedWallet } from '../../state/user/reducer'\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nconst SolanaWalletModal = () => {\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.OPTIONS)\n\n  const { connect, select, connected, wallet } = useWallet()\n\n  const dispatch = useDispatch()\n\n  // useEffect(() => {\n  //   if (wallet) {\n  //     connect().catch(() => {})\n  //   }\n  // }, [wallet, connect]\n\n  // useEffect(() => {\n  //   wallet.adapter.addListener('error', (e) => {\n  //     console.log(e)\n  //   })\n  // }, [wallet])\n\n  const tryActivation = useCallback(\n    async (walletName) => {\n      try {\n        // setPendingConnector(connector)\n        setWalletView(WALLET_VIEWS.PENDING)\n        // dispatch(updateConnectionError({ connectionType, error: undefined }))\n        if (!connected) {\n          select(walletName)\n          await connect().catch((e) => console.log(e))\n        }\n\n        dispatch(updateSolanaSelectedWallet({ wallet: walletName }))\n      } catch (error) {\n        setWalletView(WALLET_VIEWS.OPTIONS)\n        console.debug(`solana wallet connection error: ${error}`)\n      }\n    },\n    [select, connect, connected, wallet],\n  )\n\n  const getModalContent = () => {\n    if (walletView === WALLET_VIEWS.OPTIONS) {\n      return <SolanaWalletOptions tryActivation={tryActivation} />\n    }\n\n    if (walletView === WALLET_VIEWS.PENDING) {\n      return <PendingView goBack={() => setWalletView(WALLET_VIEWS.OPTIONS)} />\n    }\n  }\n  return <div>{getModalContent()}</div>\n}\n\nexport default SolanaWalletModal\n","import React, { useEffect } from 'react'\nimport { UAParser } from 'ua-parser-js'\n\nconst useUserAgent = () => {\n  let parser = new UAParser()\n\n  useEffect(() => {\n    parser = new UAParser(typeof window !== 'undefined' ? window.navigator.userAgent : {})\n  }, [])\n\n  const { type } = parser.getDevice()\n\n  const isMobile = type === 'mobile' || type === 'tablet'\n  return isMobile\n}\n\nexport default useUserAgent\n"],"names":["InfoCard","styled","theme","backgroundInteractive","hoverState","isActive","accentActive","OptionCard","OptionCardClickable","active","clickable","disabled","OptionCardLeft","HeaderText","props","color","accentAction","textPrimary","IconWrapper","size","Option","link","onClick","header","icon","subheader","id","content","src","alt","target","href","rel","goBack","boxSize","cursor","direction","alignItems","mt","mb","fontSize","BASE_PROPS","PHANTOM_ICON_URL","InstallPhantomOption","OpenPhantomWalletOption","PhantomWalletOption","tryActivation","PhantomWalletName","isMobile","useUserAgent","bg","fontWeight","phantomOption","isSolanaInjected","getIsSolanaInjected","hasPhantomExtension","getHasPhantomExtensionInstalled","getOptions","WALLET_VIEWS","useState","walletView","setWalletView","useWallet","connect","select","connected","wallet","dispatch","useDispatch","useCallback","walletName","catch","e","console","log","updateSolanaSelectedWallet","debug","PendingView","parser","UAParser","useEffect","window","navigator","userAgent","type","getDevice"],"sourceRoot":""}